<?php

namespace app\backend\controller;

use app\backend\model\BackendMenu;
use app\backend\model\BackendUsers;
use think\Controller;
use think\Db;

/**
 * Class Admin
 * @package app\backend\model
 */
class Admin extends Controller
{
    /**
     * @var array|object 管理员数据
     */
    protected $admin;
    /**
     * @var array
     */
    protected $public_action = [];

    /**
     * @var string 管理员类型
     */
    protected $type = "F"; // T 代表项目方, F 后台管理员

    /**
     * 手机端控制变量
     * @var bool
     */
    protected $is_mobile_support = false;

    /**
     * 分页条数
     * @var int
     */
    protected $pageRows = 15;
    /**
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        // 保存日志和过滤一些密码或上传图片数据
        if (strtolower($this->request->controller()) == 'index') {
            $data = [];
        } else {
            $data = input();
            $filter_param = ['pic1', 'pic2', 'pic3', 'img', 'image'];
            foreach ($filter_param as $filter) {
                if (isset($data[$filter])) $data[$filter] = '';
            }
            if (isset($data["/" . $this->request->pathinfo()])) {
                unset($data["/" . $this->request->pathinfo()]);
            }
            if (isset($data['pwd'])) {
                unset($data['pwd']);
            }
            if (isset($data['password'])) {
                unset($data['password']);
            }
        }

        $ip = get_client_ip();
        Db::name('backend_access_log')->insertGetId([
            'admin_id' => intval(session('admin_id')),
            'module' => $this->request->pathinfo(),
            'param' => json_encode($data),
            'access_ip' => $ip,
            'access_time' => time(),
        ]);

        $id = session('admin_id');
        if (empty($id)) {
            return $this->redirect(url('open/login'));
        }

        //重置过期时间
        $this->reLogin($id);

        $this->admin = BackendUsers::getUserInfoBy($id);
        $this->type = $this->admin['type'] == 2 ? "T" : "F";
        $this->assign('user', $this->admin);
        $this->assign('type', $this->type);

        if (!$this->checkAdminAuth() && !in_array(strtolower($this->request->action()), $this->public_action)) {
            if ($this->request->isAjax()) {
//                $this->successJson(ERROR1,"没有权限", null);
                die("没有权限");
            } else {
                die("没有权限");
            }
        }

        //是否支持手机端
//        if($this->is_mobile_support && isMobile()) {
//            $this->pageRows = 6;
//            $this->view->engine->config('view_path',$this->view->engine->config('view_path').'mobile'.DS);
//        }
    }

    //用户请求后重置过期时间
    protected function reLogin($id)
    {
        session('admin_id', $id);
    }

    /**
     * @return bool
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    private function checkAdminAuth()
    {
        $controller = $this->request->controller();
        $action = $this->request->action();
        if (in_array($controller . '/' . $action, ['Index/index', 'Index/menus', 'Index/welcome','Index/img_upload','Index/oss_file_upload'])) return true;

        $param = input('param', '');
        $this->assign('param', $param);
        if (!empty($param)) $param = 'param=' . $param;
        return BackendMenu::checkCurrAuth($this->admin['id'], $controller, $action, $param);
    }

    protected function successJson($code,$message,$data) {
        return ['data'=>$data,'code'=>$code,'message'=>$message];
        die();
    }

    protected function ajaxReturn($data=[]){
        if (func_num_args() > 2) {
            $args = func_get_args();
            array_shift($args);
            $info = array();
            $info['result'] = $data;
            $info['message'] = array_shift($args);
            $info['code'] = array_shift($args);
            $data = $info;
        }
        header('Content-Type:application/json; charset=utf-8');
        exit(json_encode($data));
    }

    /**
    +----------------------------------------------------------
     * Export Excel | 2013.08.23
     * Author:HongPing <hongping626@qq.com>
    +----------------------------------------------------------
     * @param $expTitle     string File name
    +----------------------------------------------------------
     * @param $expCellName  array  Column name
    +----------------------------------------------------------
     * @param $expTableData array  Table data
    +----------------------------------------------------------
     */
    public function exportExcel($expTitle,$expCellName,$expTableData){
        set_time_limit(0);
        ignore_user_abort(1);
        $xlsTitle = iconv('utf-8', 'gb2312', $expTitle);//文件名称
        $fileName =date('_YmdHis');//or $xlsTitle 文件名称可根据自己情况设定
        $cellNum = count($expCellName);
        $dataNum = count($expTableData);
//	    require_once('ThinkPHP/Extend/Vendor/PHPExcel/PHPExcel.php');
        import("PHPExcel/PHPExcel",ROOT_PATH.'extend');

        $objPHPExcel = new \PHPExcel();
        $cellName = array('A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','AA','AB','AC','AD','AE','AF','AG','AH','AI','AJ','AK','AL','AM','AN','AO','AP','AQ','AR','AS','AT','AU','AV','AW','AX','AY','AZ');

        $objPHPExcel->getActiveSheet(0)->mergeCells('A1:'.$cellName[$cellNum-1].'1');//合并单元格
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', $expTitle.'  Export time:'.date('Y-m-d H:i:s'));
        for($i=0;$i<$cellNum;$i++){
            $objPHPExcel->setActiveSheetIndex(0)->setCellValue($cellName[$i].'2', $expCellName[$i][1]);
            if (isset($expCellName[$i][2]) && $expCellName[$i][2] > 0) {
                $objPHPExcel->getActiveSheet()->getColumnDimension($cellName[$i])->setWidth($expCellName[$i][2]); //设置宽度
            }
        }
        // Miscellaneous glyphs, UTF-8
        for($i=0;$i<$dataNum;$i++){
            for($j=0;$j<$cellNum;$j++){
                $objPHPExcel->getActiveSheet(0)->setCellValue($cellName[$j].($i+3), $expTableData[$i][$expCellName[$j][0]]);
            }
        }

        header('pragma:public');
        header('Content-type:application/vnd.ms-excel;charset=utf-8;name="'.$xlsTitle.'.xls"');
        header("Content-Disposition:attachment;filename=$fileName.xls");//attachment新窗口打印inline本窗口打印
        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save('php://output');
        exit;
    }
}
